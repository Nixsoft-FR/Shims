# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        dotnet-version: ['8.x']
        nuget-version: ['latest']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
      with:
        nuget-version: ${{ matrix.nuget-version }}

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'zulu'

    - name : Install Sonnar Scanner
      run : dotnet tool install --global dotnet-sonarscanner

    - name: Restore dependencies
      run: dotnet restore src/Shims.sln

    - name : Start Sonar Scanner
      shell: powershell
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run : dotnet sonarscanner begin /k:"Nixsoft-FR_Shims" /o:"nixsoft-fr" /d:sonar.token="$env:SONAR_TOKEN" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="./coverage/coverage.opencover.xml"

    - name: Build Solution
      run: dotnet build --configuration Release src/Shims.sln

    - name: Run Tests
      run: dotnet test --configuration Release --no-build src/Shims.sln

    - name : End Scan
      shell: powershell
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run : dotnet sonarscanner end /d:sonar.token="$env:SONAR_TOKEN"
